apiVersion: v1
kind: Namespace
metadata:
  name: simpledash
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: simpledash-sa
  namespace: simpledash
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: simpledash
  name: simpledashviewer
rules:
- apiGroups: [""] 
  resources: ["pods", "nodes", "services", "namespaces", "ingresses",  "ingresses/endpoints"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["apps"] 
  resources: ["deployments"]
  verbs: ["get", "watch", "list"]
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs: 
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: simpledashviewer
  namespace: simpledash
subjects:
- kind: ServiceAccount
  name: simpledash-sa
  namespace: simpledash
  apiGroup: 
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: ClusterRole #this must be Role or ClusterRole
  name: simpledashviewer # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: simpledash
  name: simpledash
  namespace: simpledash
spec:
  ports:
    - name: "simpledash"
      port: 1337
      targetPort: 1337
  type: LoadBalancer
  selector:
    app: simpledash
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: simpledash
  name: simpledash
  namespace: simpledash
spec:
  replicas: 1
  selector:
    matchLabels:
      app: simpledash
  strategy: {}
  template:
    metadata:
      labels:
        app: simpledash
    spec:
      serviceAccountName: simpledash-sa
      containers:
        - image: simpledash
          name: simpledash
          env:
          - name: "SIMPLEDASH_NAMESPACES"
            value: '["simpledash","default"]'
          - name: "SIMPLEDASH_CLUSTERNAME"
            value: 'local-dev-env'
          - name: "POD_LOGS_LINK_ENABLED"
            value: 'true'
          - name: "POD_LOGS_LINK"
            value: 'http://link-to-kibana-or-similiar'
          - name: "DEPLOYMENT_LOGS_LINK_ENABLED"
            value: 'true'
          - name: "DEPLOYMENT_LOGS_LINK"
            value: 'http://link-to-kibana-or-similiar'
          ports:
          - containerPort: 1337
          resources: {}
      
      restartPolicy: Always
status: {}
